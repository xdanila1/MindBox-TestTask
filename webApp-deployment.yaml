apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webapp
spec:
  replicas: 4
  strategy:
    type: RollingUpdate   # Стратегия обновления. Две реплики остаются для поддержки трафика, две обновляются.
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: nginx:1.25.3  
        resources:
          requests:
            memory: "128Mi"
          limits:
            memory: "146Mi" # небольшой запас, чтобы под не закрылся из-за нехватки килобайта
            cpu: "0.1"
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:            # обработчик проверки
            port: 80
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  type: NodePort  # если есть прокси-сервер для распределения трафика, то можно ClusterIP
  selector:
    app: webapp
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30001

